
#!/usr/bin/env bash
app=ipes
cd "$(dirname "$0")" || exit
rundir=./
logfile=./var/log/ipes/ipes.log
pidfile=/var/run/$app.pid
check_pid() {
        if [ -f $pidfile ];then
                pid=$(cat $pidfile)
                if [ -n "$pid" ]; then
			running=$(ps |grep "$pid"|grep $app|grep -v "PID CMD" |wc -l)
                        return "$running"
                else
			running=$(pgrep $app|grep -v "PID CMD" |wc -l)
                        return "$running"
                fi
        fi
        return 0
}
start() {
        check_pid
        running=$?
        if [ $running -gt 0 ];then
                echo -en "$app now is running already, pid= $(cat $pidfile)"
        else
                $rundir/$app start
                sleep 1
                if [ -f $pidfile ];then
                        pid=$(cat $pidfile)
                        echo "$app started..., pid=$pid"
                else
                        echo "$app failed to start."
						 if [ -f "$app.old" ];then
							echo "next time try old one..."
							mv $app "$app.new"
							mv "$app.old" $app
						 fi
                fi
        fi
}
stop() {
    pid=$(cat $pidfile)
    kill -SIGTERM "$pid"
    sleep 1
    echo "$app stoped..."
}
restart() {
    stop
    sleep 1
    start
}
status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

help() {
    echo "$0 start|stop|restart|reload|status"
}
if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "reload" ];then
    restart
else
    help
fi
